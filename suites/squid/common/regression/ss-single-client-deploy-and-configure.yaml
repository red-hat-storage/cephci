tests:
  - test:
      name: Install ceph pre-requisites
      desc: installation of ceph pre-requisites
      module: install_prereq.py
      abort-on-fail: true

  - test:
      name: Cephadm Bootstrap and add hosts using spec
      desc: bootstrap with apply spec option
      module: test_bootstrap.py
      polarion-id: CEPH-83573721
      config:
        command: bootstrap
        base_cmd_args:
          verbose: true
        args:
          registry-json: registry.redhat.io
          custom_image: true
          mon-ip: node1
          fsid: f64f341c-655d-11eb-8778-fa163e914bcc
          skip-monitoring-stack: true
          orphan-initial-daemons: true
          ssh-user: cephuser
          ssh-public-key: /home/cephuser/.ssh/id_rsa.pub # if ssh-public-key is provided then provide
          ssh-private-key: /home/cephuser/.ssh/id_rsa # ssh-private-key also else validation fails
          apply-spec:
            - service_type: host
              address: true
              labels: apply-all-labels
              nodes:
                - node1
                - node2
                - node3
                - node4
                - node5
      destroy-cluster: false
      abort-on-fail: true

  - test:
      name: Service deployment with spec
      desc: Add services using spec file.
      module: test_cephadm.py
      polarion-id: CEPH-83574887
      config:
        steps:
          - config:
              command: apply_spec
              service: orch
              validate-spec-services: true
              specs:
                - service_type: mon
                  placement:
                    nodes:
                      - node1
                      - node2
                      - node3
                  extra_container_args:
                    - "--cpus=2"
                - service_type: mgr
                  placement:
                    label: mgr
                  extra_container_args:
                    - "--cpus=2"
                - service_type: prometheus
                  placement:
                    count: 1
                    nodes:
                      - node1
                  extra_container_args:
                    - "--cpus=1"
                - service_type: grafana
                  placement:
                    nodes:
                      - node1
                  extra_container_args:
                    - "--cpus=1"
                - service_type: alertmanager
                  placement:
                    count: 2
                    label: alertmanager
                  extra_container_args:
                    - "--cpus=1"
                - service_type: node-exporter
                  placement:
                    host_pattern: "*"
                  extra_container_args:
                    - "--cpus=1"
                - service_type: crash
                  placement:
                    host_pattern: "*"
                  extra_container_args:
                    - "--cpus=1"
                - service_type: osd
                  service_id: all-available-devices
                  placement:
                    host_pattern: "*"
                  spec:
                    data_devices:
                      all: "true"                         # boolean as string
                    encrypted: "true"                     # boolean as string
                  extra_container_args:
                    - "--cpus=2"
          - config:
              command: shell
              args:                 # sleep to get all services deployed
                - sleep
                - "300"
          - config:
              command: shell
              args: # arguments to ceph orch
                - ceph
                - fs
                - volume
                - create
                - cephfs
          - config:
              command: apply_spec
              service: orch
              specs:
                - service_type: mds
                  service_id: cephfs
                  placement:
                    label: mds
                  extra_container_args:
                    - "--cpus=1"
          - config:
              command: apply_spec
              service: orch
              specs:
                - service_type: nfs
                  service_id: nfs-rgw-service
                  placement:
                    nodes:
                      - node4
                  spec:
                    port: 2049
                  extra_container_args:
                    - "--cpus=1"
          - config:
              command: shell
              args:
                - "radosgw-admin realm create --rgw-realm=east --default"
          - config:
              command: shell
              args:
                - "radosgw-admin zonegroup create --rgw-zonegroup=asia --master --default"
          - config:
              command: shell
              args:
                - "radosgw-admin zone create --rgw-zonegroup=asia --rgw-zone=india --master --default"
          - config:
              command: shell
              args:
                - "radosgw-admin period update --rgw-realm=east --commit"
          - config:
              command: apply_spec
              service: orch
              specs:
                - service_type: rgw
                  service_id: my-rgw
                  placement:
                    count_per_host: 2
                    nodes:
                      - node4
                      - node3
                      - node2
                  spec:
                    rgw_frontend_port: 8080
                    rgw_realm: east
                    rgw_zone: india
                  extra_container_args:
                    - "--cpus=1"
          - config:
              command: shell
              args: # sleep to get all services deployed
                - sleep
                - "120"
  - test:
      name: Configure client
      desc: Configure client on node5
      module: test_client.py
      polarion-id: CEPH-83573758
      config:
        command: add
        id: client.1                      # client Id (<type>.<Id>)
        node: node5                       # client node
        install_packages:
          - ceph-common                   # install ceph common packages
        copy_admin_keyring: true          # Copy admin keyring to node
        store-keyring: true               # /etc/ceph/ceph.client.1.keyring
        caps: # authorize client capabilities
          mon: "allow *"
          osd: "allow *"
          mds: "allow *"
          mgr: "allow *"
      destroy-cluster: false
      abort-on-fail: true
