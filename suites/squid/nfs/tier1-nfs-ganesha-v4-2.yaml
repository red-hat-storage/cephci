#===============================================================================================
#-------------------------------------
#---    Test Suite for Nfs Ganesha vers 4.2---
#-------------------------------------
# Conf: conf/squid/nfs/1admin-7node-3client.yaml
# Smoke test cases for
#    - Bootstrap
#    - Host management
#    - Configure nfs-ganesha on nfs server,do mount on any client and do IOs
#    - Test tier1 scenarios
#
#===============================================================================================
tests:
  - test:
      abort-on-fail: true
      desc: Install software pre-requisites for cluster deployment.
      module: install_prereq.py
      name: setup pre-requisites

  - test:
      abort-on-fail: true
      config:
        steps:
          - config:
              command: bootstrap
              service: cephadm
              args:
                mon-ip: node1
          - config:
              command: add_hosts
              service: host
              args:
                attach_ip_address: true
                labels: apply-all-labels
          - config:
              command: apply
              service: osd
              args:
                all-available-devices: true
          - config:
              command: apply
              service: rgw
              pos_args:
                - rgw.1
              args:
                placement:
                  label: rgw
          - config:
              args:
                - "ceph fs volume create cephfs"
              command: shell
          - config:
              args:
                placement:
                  label: mds
              base_cmd_args:
                verbose: true
              command: apply
              pos_args:
                - cephfs
              service: mds
          - config:
              args:
                - "ceph osd pool create rbd"
              command: shell
          - config:
              args:
                - "rbd pool init rbd"
              command: shell
      desc: bootstrap and deploy services.
      destroy-cluster: false
      polarion-id: CEPH-83573713
      module: test_cephadm.py
      name: Deploy cluster using cephadm

  - test:
      abort-on-fail: true
      config:
        command: add
        id: client.1
        node: node4
        install_packages:
          - ceph-common
          - ceph-fuse
        copy_admin_keyring: true
      desc: Configure the RGW,RBD client system
      destroy-cluster: false
      module: test_client.py
      name: configure client

  - test:
      abort-on-fail: true
      config:
        command: add
        id: client.2
        node: node5
        install_packages:
          - ceph-common
          - ceph-fuse
        copy_admin_keyring: true
      desc: Configure the RGW,RBD client system
      destroy-cluster: false
      module: test_client.py
      name: configure client

  - test:
      abort-on-fail: true
      config:
        command: add
        id: client.3
        node: node6
        install_packages:
          - ceph-common
          - ceph-fuse
        copy_admin_keyring: true
      desc: Configure the RGW,RBD client system
      destroy-cluster: false
      module: test_client.py
      name: configure client

  - test:
      abort-on-fail: true
      config:
        command: add
        id: client.4
        node: node7
        install_packages:
          - ceph-common
          - ceph-fuse
        copy_admin_keyring: true
      desc: Configure the RGW,RBD client system
      destroy-cluster: false
      module: test_client.py
      name: configure client

  - test:
      name: Nfs Verify symbolic links inherit appropriate permissions and not allow unauthorized access
      module: nfs_verify_symbolic_links_permissions.py
      desc: Verify symbolic links inherit appropriate permissions and not allow unauthorized access
      polarion-id: CEPH-83575975
      abort-on-fail: false
      config:
        nfs_version: 4.2
        clients: 1

  - test:
      name: Verify owner of a symbolic link and the owner of the target file can be different users
      module: nfs_verify_symbolic_links_users.py
      desc: Verify owner of a symbolic link and the owner of the target file can be different users
      polarion-id: CEPH-83575972
      abort-on-fail: false
      config:
        nfs_version: 4.2
        clients: 1

  - test:
      name: Nfs Verify file mv operation
      module: nfs_verify_read_write_operations.py
      desc: Verify mv is denied with a permission error when tried on readonly nfs share
      polarion-id: CEPH-83575932
      abort-on-fail: false
      config:
        nfs_version: 4.2
        clients: 1
        operation: mv_file

  - test:
      name: Nfs Verify file mv and replace opertaion
      module: nfs_verify_read_write_operations.py
      desc: Verify mv is overwrites the content of the existing file with same name
      polarion-id: CEPH-83575934
      abort-on-fail: false
      config:
        nfs_version: 4.2
        clients: 1
        operation: mv_file_overwrite

  - test:
      name: Nfs Verify symbolic links create to file on other file system
      module: nfs_verify_symbolic_links_file_other_file_system.py
      desc: Verify NFS behavior when attempting to create symbolic links to files residing on other file systems with different protocols (e.g., NFS to local filesystem)
      polarion-id: CEPH-83575969
      abort-on-fail: false
      config:
        nfs_version: 4.2
        clients: 1

  - test:
      name: Nfs Verify hard links correctly reference the same inode as the original file.
      module: nfs_verify_hard_links_inode.py
      desc: Verify creation of hard links within an NFS share and verify that they correctly reference the same inode as the original file.
      polarion-id: CEPH-83575960
      abort-on-fail: false
      config:
        nfs_version: 4.2
        clients: 1

  - test:
      name: Nfs Verify multi depth dir creations
      module: nfs_verify_multi_depth_dir_and_permissions.py
      desc: Verify creating nested mutli depth directories on nfs share
      polarion-id: CEPH-83575983
      abort-on-fail: false
      config:
        nfs_version: 4.2
        clients: 1
        dir_depth: 10
        dirs_per_depth: 5

  - test:
      name: Nfs Verify default permissions
      module: nfs_verify_multi_depth_dir_and_permissions.py
      desc: Verify newly created files and dirs on an NFS share inherit default permissions.
      polarion-id: CEPH-83576012
      abort-on-fail: false
      config:
        nfs_version: 4.2
        clients: 1
        operation: default_permissions

  - test:
      name: Verify that hard links remain valid after an NFS server reboot.
      module: nfs_hard_links_server_reboot.py
      desc: Verify that hard links remain valid after an NFS server reboot.
      polarion-id: CEPH-83575971
      abort-on-fail: false
      config:
        nfs_version: 4.2
        clients: 1

  - test:
      name: Verify renaming a file that has one or more hard or symbolic links associated with it.
      module: nfs_hard_symbolic_links_rename.py
      desc: Test NFS behavior when renaming a file that has one or more hard or symbolic links associated with it.
      polarion-id: CEPH-83575974
      abort-on-fail: false
      config:
        nfs_version: 4.2
        clients: 1

  - test:
      name: Verify when deleting a file with one or more hard links and verify that the remaining hard links are still valid.
      module: nfs_hard_links_delete_file.py
      desc: Test NFS behavior when deleting a file with one or more hard links and verify that the remaining hard links are still valid.
      polarion-id: CEPH-83575964
      abort-on-fail: false
      config:
        nfs_version: 4.2
        clients: 1

  - test:
      name: Delete the old earmark and set the "nfs". Create NFS export out of it
      desc: Delete the old earmark and set the "nfs". Create NFS export out of it
      module: test_earmark_feature.py
      polarion-id: CEPH-83604500
      config:
        cephfs_volume: cephfs
        subvolume_group: nfsgroup
        earmark: smb
        operation: rename_earmark

  - test:
      name: creating volume and setting earmark
      desc: creating volume and setting earmark
      module: test_earmark_feature.py
      polarion-id: CEPH-83604497
      config:
        cephfs_volume: cephfs
        subvolume_group: nfsgroup
        earmark: nfs
        operation: verify_earmark

  - test:
      name: Override the earmark and try to create nfs export. It should fail
      desc: Override the earmark and try to create nfs export. It should fail
      module: test_earmark_feature.py
      polarion-id: CEPH-83604499
      config:
        cephfs_volume: cephfs
        subvolume_group: nfsgroup
        earmark: nfs
        operation: override_earmark

  - test:
      name: Set the earmark as "smb" and try to use the same subvolume for nfs export
      desc: Set the earmark as "smb" and try to use the same subvolume for nfs export
      module: test_earmark_feature.py
      polarion-id: CEPH-83604498
      config:
        cephfs_volume: cephfs
        subvolume_group: nfsgroup
        nfs_version: 4.2
        earmark: smb
        operation: wrong_earmark
