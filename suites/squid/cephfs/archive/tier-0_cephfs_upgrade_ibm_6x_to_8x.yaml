#===============================================================================================
# Cluster Configuration:
#    conf/quincy/cephfs/tier-2_cephfs_upgrade.yaml
#
# Test Steps:
# - Deploy IBM 6 cluster in RHEL 9, Deploy CephFS config
# - Upgrade cluster from IBM 6 to IBM 7 with IO in-progress
# - Validate cluster status
# - Verify CephFS existing config, Run I/O's
# - Run new CephFS workflows
#===============================================================================================
---
tests:
  -
    test:
      abort-on-fail: true
      desc: "Setup phase to deploy the required pre-requisites for running the tests."
      module: install_prereq.py
      name: "setup install pre-requisistes"
  -
    test:
      abort-on-fail: true
      config:
        steps:
          -
            config:
              args:
                custom_image: "cp.stg.icr.io/cp/ibm-ceph/ceph-6-rhel9:latest"
                custom_repo: "https://public.dhe.ibm.com/ibmdl/export/pub/storage/ceph/ibm-storage-ceph-6-rhel-9.repo"
                mon-ip: node1
                orphan-initial-daemons: true
                registry-url: registry.redhat.io
                skip-monitoring-stack: true
              base_cmd_args:
                verbose: true
              command: bootstrap
              service: cephadm
          -
            config:
              args:
                attach_ip_address: true
                labels: apply-all-labels
              command: add_hosts
              service: host
          -
            config:
              args:
                placement:
                  label: mgr
              command: apply
              service: mgr
          -
            config:
              args:
                placement:
                  label: mon
              command: apply
              service: mon
          -
            config:
              args:
                all-available-devices: true
              command: apply
              service: osd
          -
            config:
              args:
                - ceph
                - fs
                - volume
                - create
                - cephfs
              command: shell
          -
            config:
              args:
                placement:
                  label: mds
              base_cmd_args:
                verbose: true
              command: apply
              pos_args:
                - cephfs
              service: mds
          - config:
              args:
                - ceph
                - fs
                - set
                - cephfs
                - max_mds
                - "2"
              command: shell
        verify_cluster_health: true
      desc: "Execute the cluster deployment workflow with label placement."
      destroy-cluster: false
      module: test_cephadm.py
      name: "cluster deployment"
      polarion-id: CEPH-83573777
  -
    test:
      abort-on-fail: true
      config:
        command: add
        copy_admin_keyring: true
        id: client.1
        install_packages:
          - ceph-common
        node: node8
      desc: "Configure the Cephfs client system 1"
      destroy-cluster: false
      module: test_client.py
      name: "configure client"
  -
    test:
      abort-on-fail: true
      config:
        command: add
        copy_admin_keyring: true
        id: client.2
        install_packages:
          - ceph-common
        node: node9
      desc: "Configure the Cephfs client system 1"
      destroy-cluster: false
      module: test_client.py
      name: "configure client"
  -
    test:
      abort-on-fail: false
      desc: Creates all the fs related components before upgrade
      module: cephfs_upgrade.upgrade_pre_req.py
      name: "creation of Prerequisites for Upgrade"
      polarion-id: CEPH-83575312
  -
    test:
      abort-on-fail: false
      desc: Collects all the info required for validating the upgrade
      module: cephfs_upgrade.metadata_version_validation.py
      name: "Metadata collection for Upgrade"
      polarion-id: CEPH-83575313

  - test:
      name: Upgrade along with IOs
      module: test_parallel.py
      parallel:
        -
          test:
            abort-on-fail: false
            config:
              timeout: 30
              client_upgrade: 1
              cleint_upgrade_node: 'node8'
            desc: Runs IOs in parallel with upgrade process
            module: cephfs_upgrade.cephfs_io.py
            name: "creation of Prerequisites for Upgrade"
            polarion-id: CEPH-83575315

        - test:
            name: Upgrade ceph
            desc: Upgrade cluster to latest version
            module: cephadm.test_cephadm_upgrade.py
            polarion-id: CEPH-83574638
            config:
              command: start
              service: upgrade
              base_cmd_args:
                verbose: true
              benchmark:
                type: rados                      # future-use
                pool_per_client: true
                pg_num: 128
                duration: 10
              verify_cluster_health: true
            destroy-cluster: false
        - test:
            abort-on-fail: false
            desc: Fail MDS while Upgrade is going on
            module: cephfs_upgrade.cephfs_mds_failover.py
            name: "Fail MDS while Upgrade is in Progress"
            polarion-id: CEPH-83575628
      desc: Running upgrade, mds Failure and i/o's parallelly
      abort-on-fail: true
  - test:
      abort-on-fail: false
      desc: Validates the data after upgrade
      module: cephfs_upgrade.metadata_version_validation.py
      name: "Metadata validation after Upgrade"
      polarion-id: CEPH-83575313
  - test:
      abort-on-fail: false
      desc: Validates nfs after upgrade
      module: cephfs_upgrade.cephfs_post_upgrade_validation.py
      name: "Validates NFS after upgrade"
      polarion-id: CEPH-83575098
  - test:
      name: cephfs_volume_management
      module: cephfs_volume_management.py
      polarion-id: CEPH-83573446
      desc: cephfs volume management
      abort-on-fail: false
  - test:
      abort-on-fail: false
      desc: "cephfs basic operations"
      module: cephfs_basic_tests.py
      name: cephfs-basics
      polarion-id: "CEPH-11293"
  - test:
      name: cephfs_snapshot_management
      module: cephfs_snapshot_management.py
      polarion-id: CEPH-83573259
      desc: cephfs snapshot management
      abort-on-fail: false
  - test:
        name: cephfs_tier1_ops
        module: cephfs_tier1_ops.py
        polarion-id: CEPH-83573447
        desc: cephfs tier1 operations
        abort-on-fail: false
  - test:
      name: Clone Operations
      module: bug-1980920.py
      desc: Cancel the clone operation and validate error message
      polarion-id: CEPH-83574681
      abort-on-fail: false
  - test:
       name: Files-quota-test
       module: quota.quota_files.py
       polarion-id: CEPH-83573399
       desc: Tests the file attributes on the directory
       abort-on-fail: false
  - test:
       name: Bytes-quota-test
       module: quota.quota_bytes.py
       polarion-id: CEPH-83573399
       desc: Tests the Byte attr

