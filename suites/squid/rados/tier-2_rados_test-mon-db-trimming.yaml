# Suite contains tests related to mon db trimmings
# Note: the test cannot be run on a cluster that is just created as the DB size increases with
# new mappings for around next hour or so.. This test needs to be run on cluster who's age is at least 1 hour.
# Suited best for BM pipeline.
# Can be run on RHOS-d env as well.


tests:
  - test:
      name: setup install pre-requisistes
      desc: Setup phase to deploy the required pre-requisites for running the tests.
      module: install_prereq.py
      abort-on-fail: true

  - test:
      name: cluster deployment
      desc: Execute the cluster deployment workflow.
      module: test_cephadm.py
      config:
        verify_cluster_health: true
        steps:
          - config:
              command: bootstrap
              service: cephadm
              base_cmd_args:
                verbose: true
              args:
                mon-ip: node1
                allow-fqdn-hostname: true
          - config:
              command: add_hosts
              service: host
              args:
                attach_ip_address: true
                labels: apply-all-labels
          - config:
              command: apply
              service: mgr
              args:
                placement:
                  label: mgr
          - config:
              command: apply
              service: mon
              args:
                placement:
                  label: mon
          - config:
              command: apply
              service: osd
              args:
                all-available-devices: true
          - config:
              command: shell
              args:          # arguments to ceph orch
                - ceph
                - fs
                - volume
                - create
                - cephfs
          - config:
              command: apply
              service: rgw
              pos_args:
                - rgw.1
              args:
                placement:
                  label: rgw
          - config:
              command: apply
              service: mds
              base_cmd_args:          # arguments to ceph orch
                verbose: true
              pos_args:
                - cephfs              # name of the filesystem
              args:
                placement:
                  nodes:
                    - node2
                    - node6
                  limit: 2            # no of daemons
                  sep: " "            # separator to be used for placements
      destroy-cluster: false
      abort-on-fail: true

  - test:
      name: Configure client admin
      desc: Configures client admin node on cluster
      module: test_client.py
      polarion-id:
      config:
        command: add
        id: client.1                      # client Id (<type>.<Id>)
        node: node7                       # client node
        install_packages:
          - ceph-common
        copy_admin_keyring: true          # Copy admin keyring to node
        caps:                             # authorize client capabilities
          mon: "allow *"
          osd: "allow *"
          mds: "allow *"
          mgr: "allow *"

  - test:
      name: Enable logging to file
      module: rados_prep.py
      config:
        log_to_file: true
      desc: Change config options to enable logging to file

# env: VM only
  - test:
      name: Monitor configuration - section and masks changes
      module: rados_prep.py
      polarion-id: CEPH-83573477
      config:
        Verify_config_parameters:
          configurations:
            - config-1:
                section: "osd"
                name: "osd_max_backfills"
                value: "8"
                location_type: "class"
                location_value: "hdd"
            - config-2:
                section: "osd"
                name: "osd_recovery_max_active"
                value: "8"
                location_type: "host"
                location_value: "host"
            - config-3:
                section: "global"
                name: "debug_mgr"
                value: "10/10"
            - config-4:
                section: "osd"
                name: "osd_max_scrubs"
                value: "5"
            - config-5:
                section: "osd.1"
                name: "osd_max_scrubs"
                value: "3"
            - config-6:
                section: "mds"
                name: "mds_op_history_size"
                value: "40"
            - config-7:
                section: "client.rgw"
                name: "rgw_lc_debug_interval"
                value: "1"
            - config-8:
                section: "global"
                name: "debug_mgr"
                value: "10/10"
            - config-9:
                section: "osd.2"
                name: "debug_ms"
                value: "10/10"
      desc: Verify config changes for section & masks like device class, host etc

# RHOS-d run duration: 4 mins
# env: VM + BM
  - test:
      name: Monitor configuration - msgrv2 compression modes
      module: rados_prep.py
      polarion-id: CEPH-83574961
      config:
        Verify_config_parameters:
          configurations:
            - config-1:
                section: "mon"
                name: "ms_osd_compress_mode"
                value: "force"
            - config-2:
                section: "mon"
                name: "ms_osd_compress_min_size"
                value: "512"
            - config-3:
                section: "mon"
                name: "ms_osd_compress_mode"
                value: "none"
            - config-4:
                section: "mon"
                name: "ms_osd_compress_min_size"
                value: "1024"
      desc: Verify the health status of the cluster by randomly changing the compression configuration values

# RHOS-d run duration: 3 mins
# env: VM + BM
  - test:
      name: Replicated pool LC
      module: rados_prep.py
      polarion-id: CEPH-83571632
      config:
        replicated_pool:
          create: true
          pool_name: test_re_pool
          pg_num: 16
          size: 2
          disable_pg_autoscale: true
          rados_write_duration: 50
          rados_read_duration: 30
        set_pool_configs:
          pool_name: test_re_pool
          configurations:
            pg_num: 32
            pgp_num: 32
            pg_autoscale_mode: 'on'
            compression_mode: aggressive
            compression_algorithm: zlib
        delete_pools:
          - test_re_pool
      desc: Create replicated pools and run IO

  - test:
      name: EC pool LC
      module: rados_prep.py
      polarion-id: CEPH-83571632
      desc: Create EC pools and run IO
      config:
        ec_pool:
          pool_name: test_ec_pool
          pg_num: 32
          k: 8
          byte_size: 200KB
          m: 3
          plugin: jerasure
          rados_write_duration: 200
          rados_read_duration: 100
        replicated_pool:
          pool_name: delete_pool
          pg_num: 32
          byte_size: 1024
          rados_write_duration: 300
          rados_read_duration: 10

  - test:
      name: rbd-io
      module: rbd_faster_exports.py
      config:
        io-total: 500M
      desc: Perform export during read/write,resizing,flattening,lock operations

  - test:
      name: rgw sanity tests
      module: sanity_rgw.py
      config:
        script-name: test_multitenant_user_access.py
        config-file-name: test_multitenant_access.yaml
        timeout: 600
      desc: Perform rgw tests

  - test:
      name: Compression test - EC pool
      module: pool_tests.py
      polarion-id: CEPH-83571674
      config:
        Compression_tests:
          pool_type: erasure
          pool_config:
            pool-1: test_compression_ecpool-1
            pool-2: test_compression_ecpool-2
            rados_write_duration: 300
            byte_size: 10KB
            pg_num: 32
            k: 2
            m: 2
            plugin: jerasure
            crush-failure-domain: host
          compression_config:
            compression_mode: aggressive
            compression_algorithm: snappy
            compression_required_ratio: 0.7
            compression_min_blob_size: 1B
            byte_size: 10KB
      desc: Verification of the effect of compression on erasure coded pools

  - test:
      name: Automatic trimming of Mon DB
      module: customer_scenarios.py
      polarion-id: CEPH-83574466
      config:
        mondb_trim_config:
          paxos_service_trim_min: 10
          paxos_service_trim_max: 100
          osd_op_complaint_time: 0.000001
          osd_max_backfills: 10
          osd_recovery_max_active: 10
      desc: Verification of mon DB trimming during various cluster operations
