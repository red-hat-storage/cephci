# Suite contains basic tier-2 rados tests
#===============================================================================================
#------------------------------------------------------------------------------------------
#----- Tier-2 - To check Bluestore features   ------
#------------------------------------------------------------------------------------------
# Conf: conf/squid/rados/7-node-cluster.yaml
#
#===============================================================================================

tests:
  - test:
      name: setup install pre-requisistes
      desc: Setup phase to deploy the required pre-requisites for running the tests.
      module: install_prereq.py
      abort-on-fail: true

  - test:
      name: cluster deployment
      desc: Execute the cluster deployment workflow.
      module: test_cephadm.py
      polarion-id:
      config:
        verify_cluster_health: true
        steps:
          - config:
              command: bootstrap
              service: cephadm
              base_cmd_args:
                verbose: true
              args:
                registry-url: registry.redhat.io
                mon-ip: node1
                orphan-initial-daemons: true
          - config:
              command: add_hosts
              service: host
              args:
                attach_ip_address: true
                labels: apply-all-labels
          - config:
              command: apply
              service: mgr
              args:
                placement:
                  label: mgr
          - config:
              command: apply
              service: mon
              args:
                placement:
                  label: mon
          - config:
              command: apply
              service: osd
              args:
                all-available-devices: true
          - config:
              command: shell
              args:          # arguments to ceph orch
                - ceph
                - fs
                - volume
                - create
                - cephfs
          - config:
              command: apply
              service: rgw
              pos_args:
                - rgw.1
              args:
                placement:
                  label: rgw
          - config:
              command: apply
              service: mds
              base_cmd_args:          # arguments to ceph orch
                verbose: true
              pos_args:
                - cephfs              # name of the filesystem
              args:
                placement:
                  nodes:
                    - node2
                    - node6
                  limit: 2            # no of daemons
                  sep: " "            # separator to be used for placements
      destroy-cluster: false
      abort-on-fail: true

  - test:
      name: Configure client admin
      desc: Configures client admin node on cluster
      module: test_client.py
      polarion-id:
      config:
        command: add
        id: client.1                      # client Id (<type>.<Id>)
        node: node7                       # client node
        install_packages:
          - ceph-common
        copy_admin_keyring: true          # Copy admin keyring to node
        caps:                             # authorize client capabilities
          mon: "allow *"
          osd: "allow *"
          mds: "allow *"
          mgr: "allow *"

  - test:
      name: Enable logging to file
      module: rados_prep.py
      config:
        log_to_file: true
      desc: Change config options to enable logging to file

  - test:
      name: BlueStore Checksum algorithms
      module: test_bluestore_configs.py
      polarion-id: CEPH-83571646
      config:
        checksums:
          - none
          - crc32c
          - crc32c_16
          - crc32c_8
          - xxhash32
          - xxhash64
      desc: Verify the different applicable BlueStore Checksum algorithms

  - test:
      name: BlueStore cache size tuning
      module: test_bluestore_configs.py
      polarion-id: CEPH-83571675
      config:
        bluestore_cache: true
      desc: Verify tuning of BlueStore cache size for HDDs and SSDs

# commented until the fix has been merged in Squid
#  - test:
#      name: BlueStore Superblock redundancy
#      module: test_bluestore_superblock.py
#      polarion-id: CEPH-83590892
#      desc: Verify OSD recovery when Bluestore superblock is corrupted

  - test:
      name: OSD Superblock redundancy
      module: test_osd_superblock.py
      polarion-id: CEPH-83593841
      desc: Verify OSD recovery when OSD superblock is corrupted

  - test:
      name: Bluefs DB utilization
      desc: DB utilization is under check - bluefs files are not inflated
      module: test_bluefs_space.py
      polarion-id: CEPH-83600867
      config:
        omap_config:
          pool_name: re_pool_bluefs_db
          pg_num: 1
          pg_num_max: 1
          obj_start: 0
          obj_end: 15
          normal_objs: 400
          num_keys_obj: 200001
