#============================================================
# Test-Case: Verify certificate management through certmgr
#
# Cluster Configuration:
#    conf/tentacle/cephadm/1admin-4node-1client-cluster.yaml
#============================================================

tests:
  - test:
      name: setup install pre-requisistes
      desc: Setup phase to deploy the required pre-requisites for running the tests.
      module: install_prereq.py
      abort-on-fail: true
  - test:
      abort-on-fail: true
      config:
        steps:
          - config:
              command: bootstrap
              service: cephadm
              args:
                mon-ip: node1
          - config:
              command: add_hosts
              service: host
              args:
                attach_ip_address: true
                labels: apply-all-labels
          - config:
              command: apply
              service: osd
              args:
                all-available-devices: true
          - config:
              command: apply
              service: rgw
              pos_args:
                - rgw.1
              args:
                placement:
                  label: rgw
          - config:
              args:
                - "ceph fs volume create cephfs"
              command: shell
          - config:
              args:
                placement:
                  label: mds
              base_cmd_args:
                verbose: true
              command: apply
              pos_args:
                - cephfs
              service: mds
          - config:
              args:
                - "ceph osd pool create rbd"
              command: shell
          - config:
              args:
                - "rbd pool init rbd"
              command: shell
      desc: bootstrap and deploy services.
      destroy-cluster: false
      polarion-id: CEPH-83573713
      module: test_cephadm.py
      name: Deploy cluster using cephadm

  - test:
      abort-on-fail: true
      config:
        command: add
        id: client.1
        node: node4
        install_packages:
          - ceph-common
        copy_admin_keyring: true
      desc: Configure the RGW,RBD client system
      destroy-cluster: false
      module: test_client.py
      name: configure client

  - test:
      name: Validate certificate cephadm_root_ca_cert
      desc: Test cephadm signed cert "cephadm_root_ca_cert" is present
      module: test_certmgr_cert.py
      config:
        action: ls
        cert: cephadm_root_ca_cert
        include_cephadm_signed: True

  - test:
      name: Validate setting new user-signed certificate for Grafana
      desc: Test setting user-signed certificate for Grafana using cli command
      module: test_certmgr_cert.py
      config:
        action: set
        scope: host
        entity: grafana
        node: node1
        generate_ssl_cert: True
        cert_file_name: cert.pem
        key_file_name: key.pem
        days: 6095

  - test:
      name: Validate get command for new user-signed certificate for Grafana
      desc: Test user-signed certificate for Grafana using cli get command
      module: test_certmgr_cert.py
      config:
        action: get
        scope: host
        entity: grafana
        node: node1

  - test:
      name: Validate setting new user-signed key for Grafana
      desc: Test setting user-signed key for Grafana using cli command
      module: test_certmgr_key.py
      config:
        action: set
        scope: host
        entity: grafana
        node: node1
        generate_ssl_cert: True
        key_file_name: key.pem

  - test:
      name: Validate get command for new user-signed key for Grafana
      desc: Test user-signed key for Grafana using cli get command
      module: test_certmgr_key.py
      config:
        action: get
        scope: host
        entity: grafana
        node: node1

  - test:
      name: Validate reload command for certificates
      desc: Test reconfigure cert specs using cli command
      module: test_certmgr_cert.py
      config:
        action: reload

  - test:
      name: Validate check command for cluster
      desc: Test cluster for expired/invalid certificates
      module: test_certmgr_cert.py
      config:
        action: check

  - test:
      name: Remove the user-signed certificate for Grafana
      desc: Test rm command for certmgr
      module: test_certmgr_cert.py
      config:
        action: remove
        scope: host
        node: node1
        entity: grafana

  - test:
      name: Remove the private key for Grafana
      desc: Test rm command for certmgr
      module: test_certmgr_key.py
      config:
        action: remove
        scope: host
        node: node1
        entity: grafana

  - test:
      name: Validate setting new user-signed certificate for oauth2-proxy
      desc: Test setting user-signed certificate for oauth2-proxy using cli command
      module: test_certmgr_cert.py
      config:
        action: set
        scope: host
        entity: oauth2-proxy
        node: node1
        generate_ssl_cert: True
        cert_file_name: cert.pem
        key_file_name: key.pem
        days: 6095

  - test:
      name: Validate get command for new user-signed certificate for oauth2-proxy
      desc: Test user-signed certificate for oauth2-proxy using cli get command
      module: test_certmgr_cert.py
      config:
        action: get
        scope: host
        entity: oauth2-proxy
        node: node1

  - test:
      name: Validate setting new user-signed key for oauth2-proxy
      desc: Test setting user-signed key for oauth2-proxy using cli command
      module: test_certmgr_key.py
      config:
        action: set
        scope: host
        entity: oauth2-proxy
        node: node1
        generate_ssl_cert: True
        key_file_name: key.pem

  - test:
      name: Validate get command for new user-signed key for oauth2-proxy
      desc: Test user-signed key for oauth2-proxy using cli get command
      module: test_certmgr_key.py
      config:
        action: get
        scope: host
        entity: oauth2-proxy
        node: node1

  - test:
      name: Validate reload command for certificates
      desc: Test reconfigure cert specs using cli command
      module: test_certmgr_cert.py
      config:
        action: reload

  - test:
      name: Validate check command for cluster
      desc: Test cluster for expired/invalid certificates
      module: test_certmgr_cert.py
      config:
        action: check

  - test:
      name: Remove the user-signed certificate for oauth2-proxy
      desc: Test certmgr rm command for cert
      module: test_certmgr_cert.py
      config:
        action: remove
        scope: host
        node: node1
        entity: oauth2-proxy

  - test:
      name: Remove the private key for oauth2-proxy
      desc: Test certmgr rm command for key
      module: test_certmgr_key.py
      config:
        action: remove
        scope: host
        node: node1
        entity: oauth2-proxy
