# Suite is to be used to verify the Fast EC features added in tentacle
# to be run in regression conf: 4-node-ec-cluster-1-client.yaml
tests:
  - test:
      name: setup install pre-requisistes
      desc: Setup phase to deploy the required pre-requisites for running the tests.
      module: install_prereq.py
      abort-on-fail: true

  - test:
      name: cluster deployment
      desc: Execute the cluster deployment workflow.
      module: test_cephadm.py
      abort-on-fail: true
      config:
        verify_cluster_health: true
        steps:
          - config:
              command: bootstrap
              service: cephadm
              base_cmd_args:
                verbose: true
              args:
                mon-ip: node1

  - test:
      name: Add host
      desc: Add new host node with IP address
      module: test_host.py
      config:
        command: add_hosts
        service: host
        args:
          nodes:
            - node1
            - node2
            - node3
            - node4
          attach_ip_address: true
          labels: apply-all-labels
      destroy-cluster: false
      abort-on-fail: true

  - test:
      name: Mgr and Mon deployment
      desc: Add Mgr and Mon daemons
      module: test_cephadm.py
      polarion-id: CEPH-83573746
      abort-on-fail: true
      config:
        steps:
          - config:
              command: apply
              service: mgr
              args:
                placement:
                  label: mgr
          - config:
              command: apply
              service: mon
              args:
                placement:
                  label: mon

  - test:
      name: OSD deployment
      desc: Add OSD services using spec file.
      module: test_cephadm.py
      polarion-id: CEPH-83573746
      abort-on-fail: true
      config:
        steps:
          - config:
              command: apply_spec
              service: orch
              validate-spec-services: true
              specs:
                - service_type: osd
                  service_id: osds
                  encrypted: "true"                     # boolean as string
                  placement:
                    label: osd
                  spec:
                    data_devices:
                      all: "true"

  - test:
      name: MDS Service deployment with spec
      desc: Add MDS services using spec file
      module: test_cephadm.py
      polarion-id: CEPH-83574728
      config:
        steps:
          - config:
              command: shell
              args:               # arguments to ceph orch
                - ceph
                - fs
                - volume
                - create
                - cephfs
          - config:
              command: apply_spec
              service: orch
              validate-spec-services: true
              specs:
                - service_type: mds
                  service_id: cephfs
                  placement:
                    label: mds
          # Adding below WA to set bulk flag to false until bug fix : 2308623
          - config:
              command: shell
              args: # arguments to ceph orch
                - "ceph osd pool set cephfs.cephfs.data bulk false"

  - test:
      name: RGW Service deployment
      desc: RGW Service deployment
      module: test_cephadm.py
      polarion-id: CEPH-83574728
      config:
        steps:
          - config:
              command: apply
              service: rgw
              pos_args:
                - rgw.1
              args:
                placement:
                  label: rgw

  - test:
      name: Configure client admin
      desc: Configures client admin node on cluster
      module: test_client.py
      polarion-id:  CEPH-83573758
      abort-on-fail: true
      config:
        command: add
        id: client.1                      # client Id (<type>.<Id>)
        node: node6                     # client node
        install_packages:
          - ceph-common
          - ceph-base
          - ceph-test
        copy_admin_keyring: true          # Copy admin keyring to node
        caps:                             # authorize client capabilities
          mon: "allow *"
          osd: "allow *"
          mds: "allow *"
          mgr: "allow *"

  - test:
      name: Enable logging to file
      module: rados_prep.py
      config:
        log_to_file: true
      desc: Change config options to enable logging to file

  - test:
      name: Set configs for 4 node cluster
      desc: Set configs for 4 node cluster
      module: test_cephadm.py
      config:
        steps:
          - config:
              command: shell
              args:
                - ceph
                - config
                - set
                - mon
                - mon_osd_down_out_subtree_limit
                - host

  - test:
      name: EC pool LC
      module: rados_prep.py
      polarion-id: CEPH-83571632
      config:
        ec_pool:
          create: true
          pool_name: test_ec_pool
          pg_num: 64
          k: 2
          m: 2
          plugin: isa
          enable_fast_ec_features: "true"
          crush-failure-domain: host
          disable_pg_autoscale: true
          rados_write_duration: 50
          rados_read_duration: 10
        set_pool_configs:
          pool_name: test_ec_pool
          configurations:
            pg_num: 32
            pgp_num: 32
            pg_autoscale_mode: 'on'
            compression_mode: force
            compression_algorithm: snappy
        delete_pools:
          - test_ec_pool
      desc: Create, modify & delete EC pools and run IO

  - test:
      name: EC pool with Overwrites
      module: rados_prep.py
      polarion-id: CEPH-83571730
      config:
        ec_pool:
          create: true
          pool_name: ec_pool_overwrite
          app_name: rbd
          pg_num: 32
          enable_fast_ec_features: "true"
          erasure_code_use_overwrites: "true"
          k: 2
          m: 2
          plugin: isa
          crush-failure-domain: host
          max_objs: 300
          rados_read_duration: 10
          test_overwrites_pool: true
          metadata_pool: re_pool_overwrite
          image_name: image_ec_pool
          image_size: 100M
        delete_pools:
          - ec_pool_overwrite
          - re_pool_overwrite
      desc: EC pool with Overwrites & create RBD pool

  - test:
      name: EC Pool Recovery Improvement
      module: pool_tests.py
      polarion-id: CEPH-83573852
      config:
        ec_pool_recovery_improvement:
          create: true
          pool_name: ec_pool_recovery
          k: 2
          m: 2
          enable_fast_ec_features: true
          pg_num: 32
          crush-failure-domain: host
          max_objs: 300
          rados_read_duration: 10
          osd_max_backfills: 16
          osd_recovery_max_active: 16
          delete_pool: true
      desc: Verify Recovery of EC pool with only "k" shards available

# 2+2@4 specific scenarios, with Fast EC features enabled:
#        scenario-1: Test the effects of bulk flag and no IO stoppage
#        scenario-2: Perform rolling reboot of all the OSDs on a particular host.
#        scenario-3: OSD operations
#        scenario-4: Stopping 1 OSD from each host
#        scenario-5: Stopping all OSDs of 1 host
#        scenario-6: Add new host and OSDs into the cluster
#        scenario-7: Remove 1 OSD from 1 host
#        scenario-8: Remove 1 host from the cluster
  - test:
      name: EC pool 2=2@4 LC - scenarios 1,2,3
      module: test_four_node_ecpool.py
      polarion-id: CEPH-83575858
      abort-on-fail: true
      config:
        ec_pool:
          profile_name: ec22_profile
          pool_name: test_ec_pool
          k: 2
          m: 2
          enable_fast_ec_features: true
          force: true
          crush-failure-domain: host
        delete_pools:
          - test_ec_pool
        scenarios_to_run:
          - scenario-1
          - scenario-2
          - scenario-3
      desc: 2+2@4 EC pool life cycle with serviceability scenarios

  - test:
      name: EC pool 2=2@4 LC - scenarios 4,5
      module: test_four_node_ecpool.py
      polarion-id: CEPH-83575858
      abort-on-fail: true
      config:
        ec_pool:
          profile_name: ec22_profile
          pool_name: test_ec_pool
          k: 2
          m: 2
          force: true
          enable_fast_ec_features: true
          crush-failure-domain: host
        delete_pools:
          - test_ec_pool
        scenarios_to_run:
          - scenario-4
          - scenario-5
      desc: 2+2@4 EC pool life cycle with serviceability scenarios

  - test:
      name: EC pool 2=2@4 LC - scenarios 6
      module: test_four_node_ecpool.py
      polarion-id: CEPH-83575858
      abort-on-fail: true
      config:
        ec_pool:
          profile_name: ec22_profile
          pool_name: test_ec_pool
          k: 2
          m: 2
          force: true
          enable_fast_ec_features: true
          crush-failure-domain: host
        delete_pools:
          - test_ec_pool
        scenarios_to_run:
          - scenario-6
      desc: 2+2@4 EC pool life cycle with serviceability scenarios

  - test:
      name: EC pool 2=2@4 LC - scenarios 7
      module: test_four_node_ecpool.py
      polarion-id: CEPH-83575858
      abort-on-fail: true
      config:
        ec_pool:
          profile_name: ec22_profile
          pool_name: test_ec_pool
          k: 2
          m: 2
          force: true
          enable_fast_ec_features: true
          crush-failure-domain: host
        delete_pools:
          - test_ec_pool
        scenarios_to_run:
          - scenario-7
      desc: 2+2@4 EC pool life cycle with serviceability scenarios

  - test:
      name: EC pool 2=2@4 LC - scenarios 8
      module: test_four_node_ecpool.py
      polarion-id: CEPH-83575858
      abort-on-fail: true
      config:
        ec_pool:
          profile_name: ec22_profile
          pool_name: test_ec_pool
          k: 2
          m: 2
          force: true
          enable_fast_ec_features: true
          crush-failure-domain: host
        delete_pools:
          - test_ec_pool
        scenarios_to_run:
          - scenario-8
      desc: 2+2@4 EC pool life cycle with serviceability scenarios
