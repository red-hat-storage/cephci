# Suite contains basic tier-2 rados tests
tests:
  - test:
      name: setup install pre-requisistes
      desc: Setup phase to deploy the required pre-requisites for running the tests.
      module: install_prereq.py
      abort-on-fail: true

  - test:
      name: cluster deployment
      desc: Execute the cluster deployment workflow.
      module: test_cephadm.py
      polarion-id:
      config:
        verify_cluster_health: true
        steps:
          - config:
              command: bootstrap
              service: cephadm
              base_cmd_args:
                verbose: true
              args:
                registry-url: registry.redhat.io
                mon-ip: node1
                allow-fqdn-hostname: true
                orphan-initial-daemons: true
          - config:
              command: add_hosts
              service: host
              args:
                attach_ip_address: true
                labels: apply-all-labels
          - config:
              command: apply
              service: mgr
              args:
                placement:
                  label: mgr
          - config:
              command: apply
              service: mon
              args:
                placement:
                  label: mon
          - config:
              command: apply
              service: osd
              args:
                all-available-devices: true
          - config:
              command: shell
              args:          # arguments to ceph orch
                - ceph
                - fs
                - volume
                - create
                - cephfs
          - config:
              command: apply
              service: rgw
              pos_args:
                - rgw.1
              args:
                placement:
                  label: rgw
          - config:
              command: apply
              service: mds
              base_cmd_args:          # arguments to ceph orch
                verbose: true
              pos_args:
                - cephfs              # name of the filesystem
              args:
                placement:
                  nodes:
                    - node2
                    - node6
                  limit: 2            # no of daemons
                  sep: " "            # separator to be used for placements
      destroy-cluster: false
      abort-on-fail: true

  - test:
      name: Configure client admin
      desc: Configures client admin node on cluster
      module: test_client.py
      polarion-id:
      config:
        command: add
        id: client.1                      # client Id (<type>.<Id>)
        node: node7                       # client node
        install_packages:
          - ceph-common
        copy_admin_keyring: true          # Copy admin keyring to node
        caps:                             # authorize client capabilities
          mon: "allow *"
          osd: "allow *"
          mds: "allow *"
          mgr: "allow *"

  - test:
      name: Configure email alerts
      module: rados_prep.py
      polarion-id: CEPH-83574472
      config:
        email_alerts:
          smtp_host: smtp.corp.redhat.com
          smtp_sender: ceph-iad2-c01-lab.mgr@redhat.com
          smtp_port: 25
          interval: 10
          smtp_destination:
            - pdhiran@redhat.com
          smtp_from_name: Rados Sanity Cluster Alerts
      desc: Configure email alerts on ceph cluster

  - test:
      name: Test configuration Assimilation
      module: test_config_assimilation.py
      polarion-id: CEPH-83573480
      comments: RFE - 2277761
      config:
        cluster_conf_path: "conf/reef/rados/test-confs/cluster-configs"
        Verify_config_parameters:
          configurations:
            - config-1:
                section: "mon"
                name: "mon_cluster_log_to_syslog"
                value: "true"
            - config-2:
                section: "osd"
                name: "debug_osd"
                value: "5/5"
            - config-3:
                section: "mgr"
                name: "mgr_stats_period"
                value: "10"
            - config-4:
                section: "mgr"
                name: "debug_mgr"
                value: "5/5"
            - config-5:
                section: "mds"
                name: "mds_op_history_size"
                value: "40"
      desc: Verify config assimilation into ceph mon configuration database

  - test:
      name: Enable logging to file
      module: rados_prep.py
      config:
        log_to_file: true
      desc: Change config options to enable logging to file

# The below test is openstack only, and would need modifications to run on BM.
# commenting the run of below test in BM pipeline
  - test:
      name: Verify osd heartbeat no reply
      desc: heartbeat_check log entries should contain hostname:port
      polarion-id: CEPH-10839
      module: test_osd_heartbeat.py
      destroy-cluster: false

  - test:
      name: Monitor configuration - section and masks changes
      module: rados_prep.py
      polarion-id: CEPH-83573477
      config:
        Verify_config_parameters:
          configurations:
            - config-1:
                section: "osd"
                name: "osd_max_backfills"
                value: "8"
                location_type: "class"
                location_value: "hdd"
            - config-2:
                section: "osd"
                name: "osd_recovery_max_active"
                value: "8"
                location_type: "host"
                location_value: "host"
            - config-3:
                section: "global"
                name: "debug_mgr"
                value: "10/10"
            - config-4:
                section: "osd"
                name: "osd_max_scrubs"
                value: "5"
            - config-5:
                section: "osd.1"
                name: "osd_max_scrubs"
                value: "3"
            - config-6:
                section: "mds"
                name: "mds_op_history_size"
                value: "40"
            - config-7:
                section: "client.rgw"
                name: "rgw_lc_debug_interval"
                value: "1"
            - config-8:
                section: "global"
                name: "debug_mgr"
                value: "10/10"
            - config-9:
                section: "osd.2"
                name: "debug_ms"
                value: "10/10"
      desc: Verify config changes for section & masks like device class, host etc

  - test:
      name: Monitor configuration - msgrv2 compression modes
      module: rados_prep.py
      polarion-id: CEPH-83574961
      config:
        Verify_config_parameters:
          configurations:
            - config-1:
                section: "mon"
                name: "ms_osd_compress_mode"
                value: "force"
            - config-2:
                section: "mon"
                name: "ms_osd_compress_min_size"
                value: "512"
            - config-3:
                section: "mon"
                name: "ms_osd_compress_mode"
                value: "none"
            - config-4:
                section: "mon"
                name: "ms_osd_compress_min_size"
                value: "1024"
      desc: Verify the health status of the cluster by randomly changing the compression configuration values

  - test:
      name: Replicated pool LC
      module: rados_prep.py
      polarion-id: CEPH-83571632
      config:
        replicated_pool:
          create: true
          pool_name: test_re_pool
          pg_num: 16
          size: 2
          disable_pg_autoscale: true
          rados_write_duration: 50
          rados_read_duration: 30
        set_pool_configs:
          pool_name: test_re_pool
          configurations:
            pg_num: 32
            pgp_num: 32
            pg_autoscale_mode: 'on'
            compression_mode: aggressive
            compression_algorithm: zlib
        delete_pools:
          - test_re_pool
      desc: Create replicated pools and run IO

  - test:
      name: Compression algorithms
      module: rados_prep.py
      polarion-id: CEPH-83571669
      config:
        replicated_pool:
          create: true
          pool_name: re_pool_compress
          pg_num: 32
          rados_write_duration: 10
          rados_read_duration: 10
        enable_compression:
          pool_name: re_pool_compress
          rados_write_duration: 50
          rados_read_duration: 50
          configurations:
            - config-1:
                compression_mode: force
                compression_algorithm: snappy
                compression_required_ratio: 0.3
                compression_min_blob_size: 1B
                byte_size: 10KB
            - config-2:
                compression_mode: passive
                compression_algorithm: zlib
                compression_required_ratio: 0.7
                compression_min_blob_size: 10B
                byte_size: 100KB
            - config-3:
                compression_mode: aggressive
                compression_algorithm: zstd
                compression_required_ratio: 0.5
                compression_min_blob_size: 1KB
                byte_size: 100KB
        delete_pools:
          - re_pool_compress
      desc: Enable/disable different compression algorithms.

  - test:
      name: Ceph balancer plugin
      module: rados_prep.py
      polarion-id: CEPH-83573247
      config:
        configure_balancer:
          configure: true
          balancer_mode: crush-compat
          target_max_misplaced_ratio: 0.04
          sleep_interval: 30
      desc: Ceph balancer plugins CLI validation in crush-compat mode

  - test:
      name: Ceph balancer test
      module: rados_prep.py
      polarion-id: CEPH-83573251
      config:
        configure_balancer:
          configure: true
          balancer_mode: upmap
          target_max_misplaced_ratio: 0.05
          sleep_interval: 60
      desc: Ceph balancer plugins CLI validation in upmap mode

  - test:
      name: Ceph PG Autoscaler
      module: rados_prep.py
      polarion-id: CEPH-83573412
      config:
        replicated_pool:
          create: true
          pool_name: rep_test_pool
          rados_write_duration: 50
          rados_read_duration: 50
          pg_num: 32
        configure_pg_autoscaler:
          default_mode: warn
          mon_target_pg_per_osd: 128
          pool_config:
            pool_name: rep_test_pool
            pg_autoscale_mode: "on"
            pg_num_min: 16
            target_size_ratio: 0.4
        delete_pools:
          - rep_test_pool
      desc: Ceph PG autoscaler CLI validation

  - test:
      name: Config checks
      module: rados_prep.py
      polarion-id: CEPH-83574529
      config:
        cluster_configuration_checks:
          configure: true
          disable_check_list:
            - osd_mtu_size
            - osd_linkspeed
            - kernel_security
          enable_check_list:
            - kernel_security
            - osd_linkspeed
      desc: Enable Cluster Configuration checks

  - test:
      name: config source changes log
      module: test_mon_config_history.py
      polarion-id: CEPH-83573479
      desc: Config sources - Verify config source changes in the log

  - test:
      name: config source changes reset
      module: test_mon_config_reset.py
      polarion-id: CEPH-83573478
      desc: Config sources - Verify config source changes and reset config

# Commenting until bug fix : https://bugzilla.redhat.com/show_bug.cgi?id=2252788
# Other issues with noautoscale flag listed here : https://bugzilla.redhat.com/show_bug.cgi?id=2283358
  - test:
      name: autoscaler flags
      module: test_pg_autoscale_flag.py
      polarion-id: CEPH-83574794
      config:
        pool_configs_path: "conf/reef/rados/test-confs/pool-configurations.yaml"
        create_ec_pool: true
        create_re_pool: true
      desc: verify autoscaler flags functionality
      comments: active Bugs 2252788, 2283358

  - test:
      name: Mon election strategies
      polarion-id: CEPH-83573627
      module: test_election_strategies.py
      desc: Change Mon election strategies and verify status

  - test:
      name: EC Profile tests
      module: pool_tests.py
      polarion-id: CEPH-83596295
      config:
        Verify_ec_profile:
          name: test
          profile_name: test_profile
          pool_name: ec_profile_test
          k: 2
          m: 2
          plugin: jerasure
          rados_write_duration: 100
          rados_read_duration: 50
          crush-failure-domain: host
      desc: Verify the behaviour of EC profiles in ceph

  - test:
      name: MGR regression test
      module: test_mgr_daemon.py
      polarion-id: CEPH-83586116
      desc: MGR regression testing
