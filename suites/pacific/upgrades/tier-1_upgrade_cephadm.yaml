#===============================================================================================
# Tier-level: 1
# Test-Suite: tier-1_cephadm_upgrade.yaml
# Test-Case: Upgrade ceph cluster from Build-to-Build (B2B)
#
# Cluster Configuration:
#    conf/pacific/upgrades/tier-1_upgrade_cephadm.yaml
#
#    4-Node cluster(RHEL-8.3 and above)
#    3 MONS, 2 MDS, 1 MGR, 3 OSD and 2 RGW service daemon(s)
#     Node1 - Mon, Mgr, Installer, OSD, alertmanager, grafana, prometheus, node-exporter
#     Node2 - Mon, Mgr, OSD, MDS, RGW, alertmanager, node-exporter
#     Node3 - Mon, OSD, MDS, RGW, node-exporter
#     Node4 - Client

# Test Steps:
#   (1) (1) Bootstrap cluster using latest released ceph 5.x with below options,
#       - custom_repo: "cdn"
#       - skip-monitoring stack
#       - registry-url: <registry-URL>
#       - mon-ip: <monitor address, Required>
#   (2) Copy SSH keys to nodes and Add it to cluster with address and role labels attached to it.
#   (3) Deploy services using apply option,
#       - 3 Mon on node1, node2, Node3
#       - addition of OSD's using "all-available-devices" option.
#       - RGW on node2, node3 with india.south(realm.zone) using label.
#       - MDS on node2, node3 with host placements.
#   (4) Upgrade to distro build(N) by provided Ceph image version.
#===============================================================================================
tests:
  - test:
      name: setup install pre-requisistes
      desc: Setup phase to deploy the required pre-requisites for running the tests.
      module: install_prereq.py
      abort-on-fail: true
  - test:
      name: Cluster deployment
      desc: Cluster deployment with latest released version of 5.x
      module: test_cephadm.py
      polarion-id: CEPH-83573791
      config:
        verify_cluster_health: true
        steps:
          - config:
              command: bootstrap
              service: cephadm
              base_cmd_args:
                verbose: true
              args:
                custom_repo: "cdn"
                registry-url: registry.redhat.io
                mon-ip: node1
                skip-monitoring-stack: true
          - config:
              command: add_hosts
              service: host
              args:
                attach_ip_address: true
                labels: apply-all-labels
          - config:
              command: apply
              service: mgr
              args:
                placement:
                  label: mgr
          - config:
              command: apply
              service: mon
              args:
                placement:
                  label: mon
          - config:
              command: apply
              service: osd
              args:
                all-available-devices: true
          - config:
              command: shell
              args:          # arguments to ceph orch
                - ceph
                - fs
                - volume
                - create
                - cephfs
          - config:
              command: apply
              service: mds
              base_cmd_args:          # arguments to ceph orch
                verbose: true
              pos_args:
                - cephfs              # name of the filesystem
              args:
                placement:
                  nodes:
                    - node2
                    - node3
          - config:
              command: apply
              service: prometheus
              base_cmd_args:
                verbose: true
              args:
                placement:
                  nodes:
                    - node1
                  limit: 1
                  sep: ";"
          - config:
              command: apply
              service: grafana
              base_cmd_args:
                verbose: true
              args:
                placement:
                  nodes:
                    - node1
                  limit: 1
                  sep: ";"
          - config:
              command: apply
              service: alertmanager
              args:
                placement:
                  label: alertmanager
          - config:
              command: apply
              service: node-exporter
              base_cmd_args:
                verbose: true
              args:
                placement:
                  nodes: "*"
          - config:
              command: apply
              service: crash
              base_cmd_args:
                verbose: true
              args:
                placement:
                  nodes: "*"
          - config:
              command: apply
              service: rgw
              base_cmd_args: # arguments to ceph orch
                verbose: true
              pos_args: # positional arguments
                - foo                 # service id
              args:
                placement:
                  nodes: # A list of strings that would looked up
                    - node2
                    - node3
                  limit: 2            # no of daemons
                  sep: ";"            # separator to be used for placements
      destroy-cluster: false
      abort-on-fail: true
  - test:
      name: Configure client
      desc: Configure client on node4
      module: test_client.py
      polarion-id:
      config:
        command: add
        id: client.1                      # client Id (<type>.<Id>)
        node: node4                       # client node
        install_packages:
          - ceph-common                   # install ceph common packages
        copy_admin_keyring: true          # Copy admin keyring to node
        caps:                             # authorize client capabilities
          mon: "allow *"
          osd: "allow *"
          mds: "allow *"
          mgr: "allow *"
      destroy-cluster: false
      abort-on-fail: true
  - test:
      name: Parallel run
      module: test_parallel.py
      parallel:
        - test:
            config:
              script-name: test_Mbuckets_with_Nobjects.py
              config-file-name: test_Mbuckets_with_Nobjects.yaml
              timeout: 300
            desc: test to create "M" no of buckets and "N" no of objects
            module: sanity_rgw.py
            name: Test M buckets with N objects
            polarion-id: CEPH-9789
        - test:
            name: rbd-io
            module: rbd_faster_exports.py
            config:
              io-total: 100M
            desc: Perform export during read/write,resizing,flattening,lock operations
        - test:
            name: Upgrade ceph
            desc: Upgrade cluster to latest version
            module: test_cephadm_upgrade.py
            polarion-id: CEPH-83573791
            config:
              command: start
              service: upgrade
              base_cmd_args:
                verbose: true
              benchmark:
                type: rados                      # future-use
                pool_per_client: true
                pg_num: 128
                duration: 10
              verify_cluster_health: true
            destroy-cluster: false
            abort-on-fail: true
      desc: Running upgrade and i/o's parallelly
