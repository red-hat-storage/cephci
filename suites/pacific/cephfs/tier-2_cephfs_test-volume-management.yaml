---
#===============================================================================================
# Tier-level: 2
# Test-Suite: tier-2_cephfs_test-volume-management.yaml
# Conf file : conf/pacific/cephfs/tier-2_cephfs_9-node-cluster.yaml
# Test-Case Covered:
# CEPH-83574164 : Create cephfs subvolumegroup with desired data pool_layout
# CEPH-83574193 - cephfs subvolume size expansion test
# CEPH-83574166 - Create cephfs subvolumegroup with specific uid,gid test  //TO DO
# CEPH-83574182 - Delete subvolume name that does not exist
# CEPH-83574169 - Remove subvolume group name does not exist with force option
# CEPH-83574168 - Delete_non_exist_subvol_group
# CEPH-83573637 - Verify if the FS data can be moved from an existing Replicated Datapool to EC datapool
# CEPH-83574158 - arbitary pool removal on volume deletion test
# CEPH-83573428 - cephfs_vol_mgmt_create_vol_component_exist_name
# CEPH-83574162 - cephfs_vol_mgmt_non_exist_subvol_group_deletetion
# CEPH-83573528 - cephfs_vol_mgmt_pool_name_option_test
# CEPH-83574161 - Checking default subvolume group gid and uid
# CEPH-83574181 - Checking default subvolume gid and uid
# CEPH-83574163 - cephfs_vol_mgmt_invalid_pool_layout
# CEPH-83574190 - Volume default and different permission test
# CEPH-83574192 - Subvolume creation with invalid pool_layout
# CEPH-83574187 - Subvolume creation with isolated_namespace option
# CEPH-83574165	- Create cephfs subvolumegroup with desired permissions test
# CEPH-83574331 - Adding new data pools to cephfs which has existing data pool.
# CEPH-83573428 - cephfs_vol_mgmt_volume_with_exist_names
# CEPH-83574188 - Testing auto-cleanup cephfs subvolume after creation failure
#===============================================================================================
tests:
  - test:
      name: setup install pre-requisistes
      desc: Setup phase to deploy the required pre-requisites for running the tests.
      module: install_prereq.py
      abort-on-fail: true
  - test:
      name: cluster deployment
      desc: Execute the cluster deployment workflow.
      module: test_cephadm.py
      polarion-id:
      config:
        verify_cluster_health: true
        steps:
          - config:
              command: bootstrap
              service: cephadm
              base_cmd_args:
                verbose: true
              args:
                registry-url: registry.redhat.io
                mon-ip: node1
                orphan-initial-daemons: true
                skip-monitoring-stack: true
          - config:
              command: add_hosts
              service: host
              args:
                attach_ip_address: true
                labels: apply-all-labels
          - config:
              command: apply
              service: mgr
              args:
                placement:
                  label: mgr
          - config:
              command: apply
              service: mon
              args:
                placement:
                  label: mon
          - config:
              command: apply
              service: osd
              args:
                all-available-devices: true
          - config:
              command: shell
              args:          # arguments to ceph orch
                - ceph
                - fs
                - volume
                - create
                - cephfs
          - config:
              command: shell
              args:
                - ceph
                - osd
                - pool
                - create
                - cephfs-data-ec
                - "64"
                - erasure
          - config:
              command: shell
              args:
                - ceph
                - osd
                - pool
                - create
                - cephfs-metadata
                - "64"
          - config:
              command: shell
              args:
                - ceph
                - osd
                - pool
                - set
                - cephfs-data-ec
                - allow_ec_overwrites
                - "true"
          - config:
              command: shell
              args: # arguments to ceph orch
                - ceph
                - fs
                - new
                - cephfs-ec
                - cephfs-metadata
                - cephfs-data-ec
                - --force
          - config:
              command: apply
              service: mds
              base_cmd_args:          # arguments to ceph orch
                verbose: true
              pos_args:
                - cephfs              # name of the filesystem
              args:
                placement:
                  label: mds
          - config:
              command: shell
              args: # arguments to ceph orch
                - ceph
                - fs
                - set
                - cephfs
                - max_mds
                - "2"
      destroy-cluster: false
      abort-on-fail: true
  - test:
      abort-on-fail: true
      config:
        command: add
        copy_admin_keyring: true
        id: client.1
        install_packages:
          - ceph-common
        node: node8
      desc: "Configure the Cephfs client system 1"
      destroy-cluster: false
      module: test_client.py
      name: "configure client"
  - test:
      abort-on-fail: true
      config:
        command: add
        copy_admin_keyring: true
        id: client.2
        install_packages:
          - ceph-common
        node: node9
      desc: "Configure the Cephfs client system 2"
      destroy-cluster: false
      module: test_client.py
      name: "configure client"
  - test:
      name: subvolumegroup creation on desired data pool
      module: cephfs_vol_management.cephfs_vol_mgmt_subvolgroup_pool_layout.py
      polarion-id: CEPH-83574164
      desc: subvolumegroup creation with desired data pool_layout
      abort-on-fail: false
  - test:
      name: Subvolume Resize
      module: cephfs_vol_management.cephfs_vol_mgmt_subvolume_resize.py
      polarion-id: CEPH-83574193
      desc: subvolume resize
      abort-on-fail: false
  - test:
      name: Delete subvolume name that does not exist
      module: cephfs_vol_management.cephfs_vol_mgmt_non_exist_subvolume.py
      polarion-id: CEPH-83574182
      desc: Delete subvolume_group name that does not exist
      abort-on-fail: false
  - test:
      name: Remove subvolume group name does not exist with force option
      module: cephfs_vol_management.cephfs_vol_mgmt_subvolume_group_force.py
      polarion-id: CEPH-83574169
      desc: Remove subvolume group name does not exist with force option
      abort-on-fail: false
  - test:
      name: delete_non_exist_subvol_group
      module: cephfs_vol_management.cephfs_vol_mgmt_delete_non_exist_subvol_group.py
      polarion-id: CEPH-83574168
      desc: delete_non_exist_subvol_group
      abort-on-fail: false
  - test:
      name: delete_non_exist_subvol_group
      module: cephfs_vol_management.cephfs_vol_mgmt_non_exist_subvol_group.py
      polarion-id: CEPH-83574162
      desc: delete_non_exist_subvol_group
      abort-on-fail: false
  - test:
      name: Verify data movement bw FS created on Replicated Pool and EC Pool
      module: cephfs_vol_management.cephfs_vol_mgmt_data_migrate.py
      polarion-id: CEPH-83573637
      desc: Verify if the FS data can be moved from an existing Replicated Datapool to EC datapool
      abort-on-fail: false
  - test:
      name: Arbitrary pool removal on cephfs volume deletion
      module: cephfs_vol_management.cephfs_vol_mgmt_arbitrary_pool_removal.py
      polarion-id: CEPH-83574158
      desc: Verify if the arbitraty pool is also deleted upon volume deletion
      abort-on-fail: false
  - test:
      name: cephfs_vol_mgmt_create_vol_component_exist_name
      module: cephfs_vol_management.cephfs_vol_mgmt_create_vol_component_exist_name.py
      polarion-id: CEPH-83573428
      desc: cephfs_vol_mgmt_create_vol_component_exist_name
      abort-on-fail: false
  - test:
      name: cephfs_vol_mgmt_pool_name_option_test
      module: cephfs_vol_management.cephfs_vol_mgmt_pool_name_option_test.py
      polarion-id: CEPH-83573528
      desc: cephfs_vol_mgmt_pool_name_option_test
      abort-on-fail: false
  - test:
      name: Checking default subvolume group gid and uid
      module: cephfs_vol_management.cephfs_vol_mgmt_subvolume_gid_uid.py
      polarion-id: CEPH-83574181
      desc: Checking default subvolume group gid and uid
      abort-on-fail: false
  - test:
      name: Checking default subvolume group gid and uid
      module: cephfs_vol_management.cephfs_vol_mgmt_subvolgroup_gid_uid.py
      polarion-id: CEPH-83574161
      desc: Checking default subvolume group gid and uid
      abort-on-fail: false
  - test:
      name: cephfs_vol_mgmt_invalid_pool_layout
      module: cephfs_vol_management.cephfs_vol_mgmt_invalid_pool_layout.py
      polarion-id: CEPH-83574163
      desc: cephfs_vol_mgmt_invalid_pool_layout
      abort-on-fail: false
  - test:
      name: volume_permission_test
      module: cephfs_vol_management.cephfs_vol_mgmt_volume_permissions.py
      polarion-id: CEPH-83574190
      desc: volume_permission_test
      abort-on-fail: false
  - test:
      name: subvolume_creation_invalid_pool_layout
      module: cephfs_vol_management.cephfs_vol_mgmt_subvolume_invalid_pool_layout.py
      polarion-id: CEPH-83574192
      desc: subvolume_creation_invalid_pool_layout
      abort-on-fail: false
  - test:
      name: subvolume_isolated_namespace
      module: cephfs_vol_management.cephfs_vol_mgmt_subvolume_isolated_namespace.py
      polarion-id: CEPH-83574187
      desc: subvolume_isolated_namespace
      abort-on-fail: false
  - test:
      name: Create cephfs subvolumegroup with desired permissions test
      module: cephfs_vol_management.cephfs_vol_mgmt_subvolgroup_octal_modes.py
      polarion-id: CEPH-83574165
      desc: cephfs subvolumegroup with different octal modes
      abort-on-fail: false
  - test:
      name: add datapools to existing FS
      module: cephfs_vol_management.cephfs_vol_mgmt_add_datapool_to_existing_fs.py
      polarion-id: CEPH-83574331
      desc: add datapools to existing FS
      abort-on-fail: false
  - test:
      name: Creating fs volume,sub-volume,sub-volume group with existing names
      module: cephfs_vol_management.cephfs_vol_mgmt_volume_with_exist_names.py
      polarion-id: CEPH-83574331
      desc: Creating fs volume,sub-volume,sub-volume group with existing names
      abort-on-fail: false
  - test:
      name: Subvolume Auto clean up after failed creating subvolume
      module: cephfs_vol_management.cephfs_vol_mgmt_auto_clean_up.py
      polarion-id: CEPH-83574188
      desc: Subvolume Auto clean up after failed creating subvolume
      abort-on-fail: false
  - test:
      name: Subvolume metadata creation, delete and modifying test
      module: cephfs_vol_management.cephfs_vol_mgmt_subvolume_metadata.py
      polarion-id: CEPH-83571330
      desc: Subvolume metadata creation, delete and modifying test
      abort-on-fail: false
  - test:
      name: Test fs volume deletion when mon_allow_pool_delete is false
      module: cephfs_vol_management.fs_del_allow_pool_false.py
      polarion-id: CEPH-83574159
      desc: Test fs volume deletion when mon_allow_pool_delete is false
      abort-on-fail: false
